<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="owf-security" default="pre-release" basedir=".">
    <property file="${basedir}/build.properties" />
    <import file="${owf.build.module}-${owf.build.rev}/build-base.xml" optional="true"/>

    <property name="build.dir" value="${basedir}/target" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="src.dir" value="${basedir}/src/main/java" />
    <property name="resource.dir" value="${basedir}/src/main/resources" />
    <property name="staging.dir" value="staging" />
    <property name="tomcat.dir" value="${staging.dir}/apache-tomcat-${tomcat.ver}" />

    <path id="compile.classpath">
        <pathelement location="${build.dir}/classes" />
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <target name="_init-ivy" >
        <antcall target="init-ivy" />
    </target>
    <available file="${owf.build.module}-${owf.build.rev}/build-base.xml" property="build-base.available" />
    <target name="init-build" unless="build-base.available" >
        <mkdir dir="${owf.build.module}-${owf.build.rev}" />
        <get src="https://www.owfgoss.org/svn/repos/ozone/ivy-repo/no-namespace/${owf.build.org}/${owf.build.module}/zips/${owf.build.module}-${owf.build.rev}.zip"
         dest="${owf.build.module}-${owf.build.rev}/${owf.build.module}-${owf.build.rev}.zip"
            username="owf-build" password="0wf-bu1!d" />
        <unzip src="${owf.build.module}-${owf.build.rev}/${owf.build.module}-${owf.build.rev}.zip" dest="${owf.build.module}-${owf.build.rev}" />
        <ant antfile="owf-build.xml" dir="." target="init-ivy" inheritall="false" />
	</target>

    <macrodef name="_resolve" >
        <attribute name="ivyFile" default="ivy.xml" />
        <sequential>
            <ivy:resolve file="@{ivyFile}" settingsRef='ivy.settings' />
            <ivy:retrieve conf="*" pattern="${lib.dir}/[artifact]-[revision].[ext]" />
        </sequential>
    </macrodef>

    <macrodef name="rep-publish">
        <attribute name="resolver" />
        <sequential>
            <ivy:publish artifactspattern="${build.dir}/[artifact].[ext]" resolver="@{resolver}" update="true" overwrite="true"
            	forcedeliver="true" settingsRef='ivy.settings'/>
        </sequential>
    </macrodef>

    <macrodef name="install">
        <attribute name="ivyFile" />
        <attribute name="buildTarget" />
        <attribute name="resolver" />
        <sequential>
            <_resolve ivyFile="@{ivyFile}" />
            <antcall target="@{buildTarget}" />
            <rep-publish resolver="@{resolver}" />
        </sequential>
    </macrodef>

    <macrodef name="build-all">
        <attribute name="resolver" />
        <sequential>
            <install buildTarget="default-ozone-jar" ivyFile="ivy.xml" resolver="@{resolver}" />
        </sequential>
    </macrodef>

    <target name="pre-release" depends="clean,zip-project,zip-extras">
        <remove-from-cache org="${owf.security.org}" module="${owf.security.module}" />
        <build-all resolver="local" />
    </target>

    <target name="release" depends="pre-release">
        <_release rel.org="${owf.security.org}" rel.module="${owf.security.module}" rel.version="${owf.security.rev}" build.dir="${build.dir}" rel.ext="jar" />
    </target>

    <target name="clear-cache" >
        <remove-from-cache org="${owf.security.org}" module="${owf.security.module}" />
    </target>

    <target name="publish_release_build" depends="_init-ivy">
        <ivy:resolve settingsRef='ivy.settings' conf="${conf}" />
        <ivy:publish artifactspattern="${build.dir}/[artifact].[ext]" resolver="pre-release" update="true" forcedeliver="true"
                         overwrite="true" settingsRef='ivy.settings'/>
    </target>
    <target name="clean" depends="_init-ivy" description="Cleans out the build directory.">
        <delete dir="${build.dir}" />
        <delete dir="${staging.dir}" />
        <delete dir="${lib.dir}" includes="**/*" />
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.dir}/classes" />
    </target>

    <target name="compile" description="Compiles classes.">
        <javac srcdir="${src.dir}"
        	destdir="${build.dir}/classes"
            classpathref="compile.classpath"
	       	source = "1.5"
	       	target = "1.5"
            debug="true" />
        <copy todir="${build.dir}/classes" >
            <fileset dir="${resource.dir}/conf" >
                <include name="**/users.properties" />
            </fileset>
        </copy>
    </target>

    <target name="zip-project">
        <_resolve ivyFile="ivy.xml" />
        <zip destfile="${build.dir}/${owf.security.module}-project.zip">
            <fileset dir="${basedir}" >
                <include name="build.xml"/>
                <include name="README.TXT"/>
                <include name="lib/**"/>
                <include name="src/**"/>
                <exclude name="**/.svn/**"/>
                <exclude name="src/main/resources/spring/**"/>
                <exclude name="target/**"/>
                <exclude name="*.zip"/>
            </fileset>
        </zip>
    </target>

<target name="default-ozone-jar" depends="compile" description="Creates default Ozone owf-security jar.">
        <jar destfile="${build.dir}/${owf.security.module}.jar" basedir="${build.dir}/classes" includes="**/*.class,**/users.properties" />
    </target>

    <target name="zip-extras">
        <mkdir dir="${tomcat.dir}" />
        <mkdir dir="${staging.dir}/owf-security" />
        <copy todir="${tomcat.dir}/lib">
            <filterchain>
                <expandproperties />
            </filterchain>
            <fileset dir="src/main/resources/spring">
                <include name="OWFsecurityContext.xml" />
                <include name="MPsecurityContext.xml" />
                <include name="MetricSecurityContext.xml" />
                <include name="users.properties" />
                <include name="ozone-security-beans/*" />
            </fileset>
        </copy>
        <copy todir="${staging.dir}/owf-security">
            <filterchain>
                <expandproperties />
            </filterchain>
            <fileset dir="src/main/resources/spring" />
        </copy>
        <mkdir dir='target' />
        <zip basedir="${staging.dir}" destfile="target/${owf.security.module}-extras.zip" 
			includes="apache-tomcat-${tomcat.ver}/**/*,etc/**/*,javascript/**/*,owf-security/**/*,dbscripts/**/*,docs/**/*">
        </zip>
    </target>
</project>
